name: Flutter Release & Netlify Deploy

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'

      - name: Accept Android Licenses
        run: yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Android SDK Components
        run: |
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager "ndk;29.0.13846066"

      - name: Cache Flutter Pub
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      # Decode google-services.json
      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json

      # Setup keystore & key.properties
      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-key.keystore
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../app/release-key.keystore" >> android/key.properties
        shell: bash

      - name: Clean Flutter build
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      # Build Android APK
      - name: Build Android APK
        run: flutter build apk --release --build-name=${{ github.ref_name }} --build-number=${{ github.run_number }}

      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/JeepEZ-${{ github.ref_name }}.apk

      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/app/outputs/flutter-apk/JeepEZ-${{ github.ref_name }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build Flutter Web
      - name: Build Flutter Web
        run: flutter build web --release

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: ./build/web
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}